### YamlMime:ManagedReference
items:
- uid: AlohaKit.Extensions.ChartExtensions
  commentId: T:AlohaKit.Extensions.ChartExtensions
  id: ChartExtensions
  parent: AlohaKit.Extensions
  children:
  - AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis(System.Single)
  - AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative(System.Single,System.Single)
  - AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative(System.Single,System.Single)
  - AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis(System.Single)
  - AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint(System.String)
  - AlohaKit.Extensions.ChartExtensions.ToKMBNumber(System.Decimal,System.Int32,System.Boolean)
  - AlohaKit.Extensions.ChartExtensions.ToKMBString(System.Decimal,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: ChartExtensions
  nameWithType: ChartExtensions
  fullName: AlohaKit.Extensions.ChartExtensions
  type: Class
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: ChartExtensions
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 4
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  syntax:
    content: public static class ChartExtensions
    content.vb: Public Module ChartExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative(System.Single,System.Single)
  commentId: M:AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative(System.Single,System.Single)
  id: GetStepForAxisPositiveAndNegative(System.Single,System.Single)
  isExtensionMethod: true
  parent: AlohaKit.Extensions.ChartExtensions
  langs:
  - csharp
  - vb
  name: GetStepForAxisPositiveAndNegative(float, float)
  nameWithType: ChartExtensions.GetStepForAxisPositiveAndNegative(float, float)
  fullName: AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative(float, float)
  type: Method
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: GetStepForAxisPositiveAndNegative
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 17
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  summary: Compute the space between lines
  example: []
  syntax:
    content: public static float GetStepForAxisPositiveAndNegative(this float minValue, float maxValue)
    parameters:
    - id: minValue
      type: System.Single
      description: Minimum value in negative axis
    - id: maxValue
      type: System.Single
      description: Maximum value in positive axis
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function GetStepForAxisPositiveAndNegative(minValue As Single, maxValue As Single) As Single
  overload: AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative*
  nameWithType.vb: ChartExtensions.GetStepForAxisPositiveAndNegative(Single, Single)
  fullName.vb: AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative(Single, Single)
  name.vb: GetStepForAxisPositiveAndNegative(Single, Single)
- uid: AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative(System.Single,System.Single)
  commentId: M:AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative(System.Single,System.Single)
  id: GetRangeValuesPositiveAndNegative(System.Single,System.Single)
  isExtensionMethod: true
  parent: AlohaKit.Extensions.ChartExtensions
  langs:
  - csharp
  - vb
  name: GetRangeValuesPositiveAndNegative(float, float)
  nameWithType: ChartExtensions.GetRangeValuesPositiveAndNegative(float, float)
  fullName: AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative(float, float)
  type: Method
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: GetRangeValuesPositiveAndNegative
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 47
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  summary: >-
    Calculate the maximum range value for horizontal or vertical lines for charts with Positive

    and negative axis
  example: []
  syntax:
    content: public static float GetRangeValuesPositiveAndNegative(this float minValue, float maxValue)
    parameters:
    - id: minValue
      type: System.Single
      description: point minimum from values
    - id: maxValue
      type: System.Single
      description: point maximum from values
    return:
      type: System.Single
      description: get the maximum range for the entire chart
    content.vb: Public Shared Function GetRangeValuesPositiveAndNegative(minValue As Single, maxValue As Single) As Single
  overload: AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative*
  nameWithType.vb: ChartExtensions.GetRangeValuesPositiveAndNegative(Single, Single)
  fullName.vb: AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative(Single, Single)
  name.vb: GetRangeValuesPositiveAndNegative(Single, Single)
- uid: AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis(System.Single)
  commentId: M:AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis(System.Single)
  id: GetStepForPositiveAxis(System.Single)
  isExtensionMethod: true
  parent: AlohaKit.Extensions.ChartExtensions
  langs:
  - csharp
  - vb
  name: GetStepForPositiveAxis(float)
  nameWithType: ChartExtensions.GetStepForPositiveAxis(float)
  fullName: AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis(float)
  type: Method
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: GetStepForPositiveAxis
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 63
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  summary: Compute the space between lines
  example: []
  syntax:
    content: public static float GetStepForPositiveAxis(this float maxValue)
    parameters:
    - id: maxValue
      type: System.Single
      description: point maximum from values
    return:
      type: System.Single
      description: Get the soace between lines
    content.vb: Public Shared Function GetStepForPositiveAxis(maxValue As Single) As Single
  overload: AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis*
  nameWithType.vb: ChartExtensions.GetStepForPositiveAxis(Single)
  fullName.vb: AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis(Single)
  name.vb: GetStepForPositiveAxis(Single)
- uid: AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis(System.Single)
  commentId: M:AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis(System.Single)
  id: GetMaxValueForPositiveAxis(System.Single)
  isExtensionMethod: true
  parent: AlohaKit.Extensions.ChartExtensions
  langs:
  - csharp
  - vb
  name: GetMaxValueForPositiveAxis(float)
  nameWithType: ChartExtensions.GetMaxValueForPositiveAxis(float)
  fullName: AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis(float)
  type: Method
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: GetMaxValueForPositiveAxis
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 83
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  summary: Calculate the maximum value for horizontal or vertical lines for charts with Positive axis
  example: []
  syntax:
    content: public static float GetMaxValueForPositiveAxis(this float maxValue)
    parameters:
    - id: maxValue
      type: System.Single
      description: point maximum from values
    return:
      type: System.Single
      description: get the maximum value for the last line
    content.vb: Public Shared Function GetMaxValueForPositiveAxis(maxValue As Single) As Single
  overload: AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis*
  nameWithType.vb: ChartExtensions.GetMaxValueForPositiveAxis(Single)
  fullName.vb: AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis(Single)
  name.vb: GetMaxValueForPositiveAxis(Single)
- uid: AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint(System.String)
  commentId: M:AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint(System.String)
  id: Remove0AfterPoint(System.String)
  isExtensionMethod: true
  parent: AlohaKit.Extensions.ChartExtensions
  langs:
  - csharp
  - vb
  name: Remove0AfterPoint(string)
  nameWithType: ChartExtensions.Remove0AfterPoint(string)
  fullName: AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint(string)
  type: Method
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: Remove0AfterPoint
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 99
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  summary: Cleans extra 0 from a string when needed. Example 40.0 is parsed to 40
  example: []
  syntax:
    content: public static string Remove0AfterPoint(this string number)
    parameters:
    - id: number
      type: System.String
      description: number string representation
    return:
      type: System.String
      description: String without extra 0 decimal
    content.vb: Public Shared Function Remove0AfterPoint(number As String) As String
  overload: AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint*
  nameWithType.vb: ChartExtensions.Remove0AfterPoint(String)
  fullName.vb: AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint(String)
  name.vb: Remove0AfterPoint(String)
- uid: AlohaKit.Extensions.ChartExtensions.ToKMBString(System.Decimal,System.Boolean,System.Boolean)
  commentId: M:AlohaKit.Extensions.ChartExtensions.ToKMBString(System.Decimal,System.Boolean,System.Boolean)
  id: ToKMBString(System.Decimal,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: AlohaKit.Extensions.ChartExtensions
  langs:
  - csharp
  - vb
  name: ToKMBString(decimal, bool, bool)
  nameWithType: ChartExtensions.ToKMBString(decimal, bool, bool)
  fullName: AlohaKit.Extensions.ChartExtensions.ToKMBString(decimal, bool, bool)
  type: Method
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: ToKMBString
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 121
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  summary: Formats a number to thousands (K),millions (M) , billions (B) and trillions (T)
  example: []
  syntax:
    content: public static string ToKMBString(this decimal number, bool isRounded = false, bool isPercentage = false)
    parameters:
    - id: number
      type: System.Decimal
      description: string number representation to format
    - id: isRounded
      type: System.Boolean
      description: check if it is needed the rounding
    - id: isPercentage
      type: System.Boolean
      description: the value is percentage
    return:
      type: System.String
      description: Formatted KMB number representation
    content.vb: Public Shared Function ToKMBString(number As Decimal, isRounded As Boolean = False, isPercentage As Boolean = False) As String
  overload: AlohaKit.Extensions.ChartExtensions.ToKMBString*
  nameWithType.vb: ChartExtensions.ToKMBString(Decimal, Boolean, Boolean)
  fullName.vb: AlohaKit.Extensions.ChartExtensions.ToKMBString(Decimal, Boolean, Boolean)
  name.vb: ToKMBString(Decimal, Boolean, Boolean)
- uid: AlohaKit.Extensions.ChartExtensions.ToKMBNumber(System.Decimal,System.Int32,System.Boolean)
  commentId: M:AlohaKit.Extensions.ChartExtensions.ToKMBNumber(System.Decimal,System.Int32,System.Boolean)
  id: ToKMBNumber(System.Decimal,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: AlohaKit.Extensions.ChartExtensions
  langs:
  - csharp
  - vb
  name: ToKMBNumber(decimal, int, bool)
  nameWithType: ChartExtensions.ToKMBNumber(decimal, int, bool)
  fullName: AlohaKit.Extensions.ChartExtensions.ToKMBNumber(decimal, int, bool)
  type: Method
  source:
    remote:
      path: src/AlohaKit/Extensions/ChartExtensions.cs
      branch: main
      repo: https://github.com/jsuarezruiz/AlohaKit.Controls.git
    id: ToKMBNumber
    path: ../src/AlohaKit/Extensions/ChartExtensions.cs
    startLine: 217
  assemblies:
  - AlohaKit
  namespace: AlohaKit.Extensions
  summary: Formats a number to thousands (K),millions (M), billions (B) and trillions (T)
  example: []
  syntax:
    content: public static decimal ToKMBNumber(this decimal number, int decimalsToRound = 0, bool isPercentage = false)
    parameters:
    - id: number
      type: System.Decimal
      description: number to format
    - id: decimalsToRound
      type: System.Int32
      description: number of decimal places to apply the rounding
    - id: isPercentage
      type: System.Boolean
      description: the value is percentage
    return:
      type: System.Decimal
      description: Formatted KMB number
    content.vb: Public Shared Function ToKMBNumber(number As Decimal, decimalsToRound As Integer = 0, isPercentage As Boolean = False) As Decimal
  overload: AlohaKit.Extensions.ChartExtensions.ToKMBNumber*
  nameWithType.vb: ChartExtensions.ToKMBNumber(Decimal, Integer, Boolean)
  fullName.vb: AlohaKit.Extensions.ChartExtensions.ToKMBNumber(Decimal, Integer, Boolean)
  name.vb: ToKMBNumber(Decimal, Integer, Boolean)
references:
- uid: AlohaKit.Extensions
  commentId: N:AlohaKit.Extensions
  href: AlohaKit.html
  name: AlohaKit.Extensions
  nameWithType: AlohaKit.Extensions
  fullName: AlohaKit.Extensions
  spec.csharp:
  - uid: AlohaKit
    name: AlohaKit
    href: AlohaKit.html
  - name: .
  - uid: AlohaKit.Extensions
    name: Extensions
    href: AlohaKit.Extensions.html
  spec.vb:
  - uid: AlohaKit
    name: AlohaKit
    href: AlohaKit.html
  - name: .
  - uid: AlohaKit.Extensions
    name: Extensions
    href: AlohaKit.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative*
  commentId: Overload:AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative
  href: AlohaKit.Extensions.ChartExtensions.html#AlohaKit_Extensions_ChartExtensions_GetStepForAxisPositiveAndNegative_System_Single_System_Single_
  name: GetStepForAxisPositiveAndNegative
  nameWithType: ChartExtensions.GetStepForAxisPositiveAndNegative
  fullName: AlohaKit.Extensions.ChartExtensions.GetStepForAxisPositiveAndNegative
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative*
  commentId: Overload:AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative
  href: AlohaKit.Extensions.ChartExtensions.html#AlohaKit_Extensions_ChartExtensions_GetRangeValuesPositiveAndNegative_System_Single_System_Single_
  name: GetRangeValuesPositiveAndNegative
  nameWithType: ChartExtensions.GetRangeValuesPositiveAndNegative
  fullName: AlohaKit.Extensions.ChartExtensions.GetRangeValuesPositiveAndNegative
- uid: AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis*
  commentId: Overload:AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis
  href: AlohaKit.Extensions.ChartExtensions.html#AlohaKit_Extensions_ChartExtensions_GetStepForPositiveAxis_System_Single_
  name: GetStepForPositiveAxis
  nameWithType: ChartExtensions.GetStepForPositiveAxis
  fullName: AlohaKit.Extensions.ChartExtensions.GetStepForPositiveAxis
- uid: AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis*
  commentId: Overload:AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis
  href: AlohaKit.Extensions.ChartExtensions.html#AlohaKit_Extensions_ChartExtensions_GetMaxValueForPositiveAxis_System_Single_
  name: GetMaxValueForPositiveAxis
  nameWithType: ChartExtensions.GetMaxValueForPositiveAxis
  fullName: AlohaKit.Extensions.ChartExtensions.GetMaxValueForPositiveAxis
- uid: AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint*
  commentId: Overload:AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint
  href: AlohaKit.Extensions.ChartExtensions.html#AlohaKit_Extensions_ChartExtensions_Remove0AfterPoint_System_String_
  name: Remove0AfterPoint
  nameWithType: ChartExtensions.Remove0AfterPoint
  fullName: AlohaKit.Extensions.ChartExtensions.Remove0AfterPoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AlohaKit.Extensions.ChartExtensions.ToKMBString*
  commentId: Overload:AlohaKit.Extensions.ChartExtensions.ToKMBString
  href: AlohaKit.Extensions.ChartExtensions.html#AlohaKit_Extensions_ChartExtensions_ToKMBString_System_Decimal_System_Boolean_System_Boolean_
  name: ToKMBString
  nameWithType: ChartExtensions.ToKMBString
  fullName: AlohaKit.Extensions.ChartExtensions.ToKMBString
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AlohaKit.Extensions.ChartExtensions.ToKMBNumber*
  commentId: Overload:AlohaKit.Extensions.ChartExtensions.ToKMBNumber
  href: AlohaKit.Extensions.ChartExtensions.html#AlohaKit_Extensions_ChartExtensions_ToKMBNumber_System_Decimal_System_Int32_System_Boolean_
  name: ToKMBNumber
  nameWithType: ChartExtensions.ToKMBNumber
  fullName: AlohaKit.Extensions.ChartExtensions.ToKMBNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
